{"version":3,"sources":["hooks/useSessionStorage.js","demos/Counter.js"],"names":["__webpack_require__","d","__webpack_exports__","useSessionStorage","react__WEBPACK_IMPORTED_MODULE_0__","_ref","key","getter","setter","ref","useRef","useEffect","json","window","sessionStorage","getItem","current","JSON","parse","value","stringify","setItem","r","Counter","react__WEBPACK_IMPORTED_MODULE_0___default","n","costate__WEBPACK_IMPORTED_MODULE_1__","costate_react__WEBPACK_IMPORTED_MODULE_2__","_hooks_useSessionStorage__WEBPACK_IMPORTED_MODULE_3__","state","useCostate","count","source","Object","assign","co","a","createElement","onClick"],"mappings":"yFAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,GAEe,SAASG,EAATE,GAAoD,IAAvBC,EAAuBD,EAAvBC,IAAKC,EAAkBF,EAAlBE,OAAQC,EAAUH,EAAVG,OACnDC,EAAMC,iBAAO,CAAEJ,MAAKC,SAAQC,WAEhCG,oBAAU,WACR,IAAIC,EAAOC,OAAOC,eAAeC,QAAQT,GAMzC,OAJIM,GACFH,EAAIO,QAAQR,OAAOS,KAAKC,MAAMN,IAGzB,WACL,IAAIO,EAAQF,KAAKG,UAAUX,EAAIO,QAAQT,UACvCM,OAAOC,eAAeO,QAAQf,EAAKa,KAEpC,IAEHR,oBAAU,WACRF,EAAIO,QAAU,CAAEV,MAAKC,SAAQC,WAC5B,CAACF,EAAKC,EAAQC,sCCpBnBR,EAAAsB,EAAApB,GAAAF,EAAAC,EAAAC,EAAA,4BAAAqB,IAAA,IAAAnB,EAAAJ,EAAA,GAAAwB,EAAAxB,EAAAyB,EAAArB,GAAAsB,EAAA1B,EAAA,GAAA2B,EAAA3B,EAAA,GAAA4B,EAAA5B,EAAA,IAKe,SAASuB,IACtB,IAAIM,EAAQC,qBAAW,CAAEC,MAAO,IAgBhC,OANA5B,YAAkB,CAChBG,IAAK,eACLC,OAAQ,kBAAMsB,GACdrB,OAAQ,SAAAwB,GAAM,OAAIC,OAAOC,OAAOC,aAAGN,GAAQG,MAI3CR,EAAAY,EAAAC,cAAA,WACEb,EAAAY,EAAAC,cAAA,UAAQC,QAhBM,WAChBH,aAAGN,GAAOE,OAAS,IAejB,MACCF,EAAME,MACPP,EAAAY,EAAAC,cAAA,UAAQC,QAdM,WAChBH,aAAGN,GAAOE,OAAS,IAajB","file":"static/js/5.bae4cac9.chunk.js","sourcesContent":["import { useRef, useEffect } from 'react'\r\n\r\nexport default function useSessionStorage({ key, getter, setter }) {\r\n  let ref = useRef({ key, getter, setter })\r\n\r\n  useEffect(() => {\r\n    let json = window.sessionStorage.getItem(key)\r\n\r\n    if (json) {\r\n      ref.current.setter(JSON.parse(json))\r\n    }\r\n\r\n    return () => {\r\n      let value = JSON.stringify(ref.current.getter())\r\n      window.sessionStorage.setItem(key, value)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    ref.current = { key, getter, setter }\r\n  }, [key, getter, setter])\r\n}\r\n","import React from 'react'\r\nimport { co } from 'costate'\r\nimport { useCostate } from 'costate/react'\r\nimport useSessionStorage from '../hooks/useSessionStorage'\r\n\r\nexport default function Counter() {\r\n  let state = useCostate({ count: 0 })\r\n\r\n  let handleIncre = () => {\r\n    co(state).count += 1\r\n  }\r\n\r\n  let handleDecre = () => {\r\n    co(state).count -= 1\r\n  }\r\n\r\n  useSessionStorage({\r\n    key: 'counter-json',\r\n    getter: () => state,\r\n    setter: source => Object.assign(co(state), source)\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handleIncre}>+1</button>\r\n      {state.count}\r\n      <button onClick={handleDecre}>-1</button>\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}